name: Deploy Astro site to Pages

on:
  push:
    branches: ["main"]

  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

env:
  BUILD_PATH: "./docs-site"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Auto Generate Docs
        shell: pwsh
        run: |
          $DocOutputFolder = "..\..\..\docs-site\src\pages\docs"
          Install-Module -Name platyPS -Scope CurrentUser -Force
          Import-Module platyPS
          Push-Location
          Set-Location ./BenchPress/Helpers/Azure/
          Import-Module ./BenchPress.Azure.psd1
          New-MarkdownHelp -Module BenchPress.Azure -OutputFolder $DocOutputFolder -Force -AlphabeticParamsOrder -UseFullTypeName -NoMetadata
          foreach ($File in Get-ChildItem $DocOutputFolder\*.md) {
            Write-Host "Updating $File"
            $Frontmatter = ""
            $FrontMatter += "---`r`n"
            $FrontMatter += "layout: `"../layouts/BaseLayout.astro`"`r`n"
            $FrontMatter += "title: `"$($File.BaseName)`"`r`n"
            $FrontMatter += "module: `"BenchPress.Azure`"`r`n"
            $FrontMatter += "version: `"${{ github.sha }}`"`r`n"
            $FrontMatter += "updatedOn: `"$(Get-Date -Format "yyyy-MM-dd HH:mm K")`"`r`n"
            $FrontMatter += "---`r`n"

            $Content = Get-Content $File -Raw
            $Content =  $FrontMatter + $Content

            Set-Content $File $Content
          }
          Pop-Location

      - name: Detect package manager
        id: detect-package-manager
        run: |
          echo "manager=npm" >> $GITHUB_OUTPUT
          echo "command=ci" >> $GITHUB_OUTPUT
          echo "runner=npx --no-install" >> $GITHUB_OUTPUT

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          cache-dependency-path: ${{ env.BUILD_PATH }}/package-lock.json

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2

      - name: Install dependencies
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
        working-directory: ${{ env.BUILD_PATH }}

      - name: Build with Astro
        run: |
          ${{ steps.detect-package-manager.outputs.runner }} astro build \
            --site "${{ steps.pages.outputs.origin }}" \
            --base "${{ steps.pages.outputs.base_path }}"
        working-directory: ${{ env.BUILD_PATH }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ${{ env.BUILD_PATH }}/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    name: Deploy
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
